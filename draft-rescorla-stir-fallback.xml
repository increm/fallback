<?xml version="1.0" encoding="US-ASCII"?>
<!--
vim:et:ts=2:sw=2:spell:spelllang=en:tw=80
-->
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY I-D.ietf-stir-rfc4474bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-stir-rfc4474bis.xml">
<!ENTITY I-D.ietf-stir-certificates SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-stir-certificates.xml">
<!ENTITY I-D.ietf-stir-passport SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-stir-passport.xml">
<!ENTITY I-D.peterson-modern-teri SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.peterson-modern-teri.xml">
<!ENTITY I-D.rosenberg-dispatch-vipr-overview SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.rosenberg-dispatch-vipr-overview.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC6116 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6116.xml">
<!ENTITY RFC6940 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6940.xml">
<!ENTITY RFC7340 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7340.xml">

]>
<!--?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?-->
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<!--?rfc strict="yes" ?-->
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="mp"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="no" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-rescorla-stir-fallback-latest"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN"
    they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title abbrev="STIR Fallback">STIR Out of Band Architecture and Use Cases</title>

			    <author fullname="Eric Rescorla" initials="E.K." surname="Rescorla">
      <organization>Mozilla</organization>

      <address>

        <email>ekr@rtfm.com</email>
      </address>
    </author>

        <author initials="J." surname="Peterson" fullname="Jon Peterson">
            <organization abbrev="Neustar">Neustar, Inc.</organization>
            <address>
                <postal>
                    <street>1800 Sutter St Suite 570</street>
                    <city>Concord</city>
                    <region>CA</region>
                    <code>94520</code>
                    <country>US</country>
                </postal>
                <email>jon.peterson@neustar.biz</email>
            </address>
        </author>


    <date year="2016" />

    <!--    <area>
    ART
    </area>-->

    <keyword>SIP</keyword>



    <abstract>
      <t>
	Existing work has defined ways to secure the identity of SIP
        calls, but the in-band mechanisms defined in that work do not properly
        transit the PSTN. This document defines out-of-band mechanisms
        which do not require modifying the messages that pass over the PSTN.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
	<t>
	The STIR problem statement <xref target="RFC7340"/> describes widespread problems enabled by impersonation in the telephone network, including illegal robocalling, voicemail hacking, and swatting.
	As telephone services are increasingly migrating onto the Internet, and using Voice over IP (VoIP) protocols such as <xref target="RFC3261">SIP</xref>, it is necessary for these protocols
	to support stronger identity mechanisms to prevent impersonation. For example, <xref target="I-D.ietf-stir-rfc4474bis"/> defines an Identity header of SIP requests capable of carrying a <xref target="I-D.ietf-stir-passport">PASSporT</xref> object in SIP as a means to cryptographically attest that the originator of a telephone call is authorized to use the calling party number (or, for native SIP cases, SIP URI) associated with the originator of the call.
	of the request.
		</t><t>
	Not all telephone calls use SIP today, however; and even those that do use SIP do not always carry SIP signaling end-to-end.
   Most calls from telephone numbers still traverse the Public Switched Telephone Network (PSTN) at some
   point.  Broadly, calls fall into one of three categories:
	</t><t><list style="numbers"><t>
	One or both of the endpoints is actually a PSTN endpoint.
	 </t><t>
	Both of the endpoints are non-PSTN (SIP, Jingle, ...) but the call
     transits the PSTN at some point.
	 </t><t>
	Non-PSTN calls which do not transit the PSTN at all (such as native SIP end-to-end calls).
	</t></list></t><t>
	The first two categories represent the  majority of telephone calls associated with problems like illegal robocalling: many robocalls today originate on the Internet but terminate at PSTN endpoints.
   However, the core network elements that operate the PSTN are legacy devices that
   are unlikely to be upgradable at this point to support an in-band authentication system.  As such, those devices largely cannot be modified to pass signatures originating on the Internet--or indeed any inband signaling
   data--intact.  In some cases they will strip the signatures from PSTN signaling; in
   others, they might damage them to the point where they cannot be
   verified.  For those first two categories above, any in-band authentication scheme does not
   seem practical in the current environment.
   	</t><t>
	But while the core network of the PSTN remains fixed, the endpoints of
   the telephone network are becoming increasingly programmable and
   sophisticated.  Landline "plain old telephone service" deployments,
   especially in the developed world, are shrinking, and increasingly
   being replaced by three classes of intelligent devices:  smart
   phones, IP PBXs, and terminal adapters.  All three are general
   purpose computers, and typically all three have Internet access as
   well as access to the PSTN.  This provides a potential avenue for
   building an authentication system that changes only the endpoints
   while leaving the PSTN intact.
      	</t><t>
	This specification therefore builds on the <xref target="I-D.ietf-stir-passport">PASSporT</xref> mechanism and the work of <xref target="I-D.ietf-stir-rfc4474bis"/> to define a way that
	a PASSporT object created in the originating network of the call can reach the terminating network even when it cannot be carried end-to-end in-band in the call signaling. This relies on
	a new service defined in this document that permits the PASSporT object to be stored during call processing and retrieved for verification purposes.
    </t>
    </section>

	<section title="Terminology">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
    </section>

	<section title="Operating Environments">
      <t>
	     This section describes the environment in which the proposed
   mechanism is intended to operate.  In the simplest setting, Alice is
   calling Bob through some set of gateways and/or the PSTN.  Both Alice
   and Bob have smart devices which can be modified, but they do not have
   a clear connection between them:  Alice cannot inject any data into
   signaling which Bob can read, with the exception of the asserted destination and origination
   E.164 numbers. The calling party number might originate from her own device or from the network.  These numbers are effectively the only data that can be used for coordination between
   the endpoints.
	  	 </t>
	<figure>
     <artwork><![CDATA[
                              +---------+
                             /           \
                         +---             +---+
    +----------+        /                      \        +----------+
    |          |       |        Gateways        |       |          |
    |   Alice  |<----->|         and/or         |<----->|    Bob   |
    | (caller) |       |          PSTN          |       | (callee) |
    +----------+        \                      /        +----------+
                         +---             +---+
                             \           /
                              +---------+
	]]></artwork>
     </figure>
	 		 <t>
			    In a more complicated setting, Alice and/or Bob may not have a smart or
   programmable device, but one or both of them are behind a STIR-aware gateway that can participate in out-of-band coordination, as shown below:
	  </t>

	 	<figure>
     <artwork><![CDATA[
                               +---------+
                              /           \
                          +---             +---+
    +----------+  +--+   /                      \   +--+  +----------+
    |          |  |  |  |        Gateways        |  |  |  |          |
    |   Alice  |<-|GW|->|         and/or         |<-|GW|->|    Bob   |
    | (caller) |  |  |  |          PSTN          |  |  |  | (callee) |
    +----------+  +--+   \                      /   +--+  +----------+
                          +---             +---+
                              \           /
                               +---------+
	]]></artwork>
     </figure>

		 <t>
		    In such a case, Alice might have an analog connection to her gateway/
   switch which is responsible for her identity.  Similarly, the gateway
   would verify Alice's identity, generate the right calling party number
   information and provide that number to Bob using ordinary
   POTS mechanisms.
	  </t>
    </section>

	<section anchor="data" title="Dataflows">
      <t>Because in these operating environments endpoints cannot pass cryptographic information to one another directly
	  through signaling, any solution must
   involve some rendezvous mechanism to allow endpoints to communicate.
   We call this rendezvous service a "call placement service" (CPS), a service where a record of call placement, in this case a PASSporT, can be stored for future retrieval.  In
   principle this service could communicate any information, but minimally we
   expect it to include a full-form PASSporT that attests
   the caller, callee, and the time of the call.  The callee can use the
   existence of a PASSporT for a given incoming call as rough validation of
   the asserted origin of that call.  (See <xref target="lookup"/> for limitations of
   this design.)
	  	 </t><t>
	There are roughly two plausible dataflow architectures for the CPS:
	</t><t><list><t>
	 The callee registers with the CPS.  When the caller wishes to
      place a call to the callee, it sends the PASSporT to the CPS which
      forwards it to the callee.
	  	 </t><t>
	  The caller stores the PASSporT with the CPS at the time of call
      placement.  When the callee receives the call, it contacts the CPS
      and retrieves the CDR.
	</t></list></t><t>
	   While the first architecture is roughly isomorphic to current VoIP
   protocols, it shares their drawbacks.  Specifically, the callee must
   maintain a full-time connection to the CPS to serve as a notification
   channel.  This comes with the usual networking costs to the callee
   and is especially problematic for mobile endpoints.  Thus, we focus
   on the second architecture in which the PSTN incoming call serves as
   the notification channel and the callee can then contact the CPS to
   retrieve the PASSporT.
	  </t>
    </section>

	<section anchor="uses" title="Use Cases">
	<t>
	The following are the motivating use cases for this mechanism. Bear in mind that just as in <xref target="I-D.ietf-stir-rfc4474bis"/> there may be multiple Identity headers in a single SIP
	INVITE, so there may be multiple PASSporTs in this out-of-band mechanism associated with a single call. For example, a SIP user agent might create a PASSporT for a call with an end user
	credential, and as the call exits the originating administrative domain the network authentication service might create its own PASSporT for the same call. As such, these use cases may overlap
	in the processing of a single call.
	</t>
		<section anchor="case-ip-pstn" title="Case 1: VoIP to PSTN Call">
		<t>
		A call originates in the SIP world in a STIR-aware administrative domain. The local authentication service for that administrative domain creates a PASSporT which is carried
		in band in the call per <xref target="I-D.ietf-stir-rfc4474bis"/>. The call is routed out of the originating administrative domain and eventually reaches a gateway to the PSTN.
		Eventually, the call will terminate on a mobile smartphone that supports this out-of-band mechanism.
		</t><t>
		In this use case, the originating authentication service can store the PASSporT with the appropriate CPS for the target telephone number as a fallback in case SIP signaling will not
		reach end-to-end. When the destination mobile smartphone receives the call over the PSTN, it consults the CPS and discovers a PASSporT from the originating telephone number waiting for it.
		It uses this PASSporT to verify the calling party number.
		</t>
		</section>
		<section anchor="case-pstn-pstn-gw" title="Case 2: Two Smart PSTN endpoints">
		<t>
		A call originates with an enterprise PBX that has both Internet access and a built-in gateway to the PSTN. It will immediately drop its call to the PSTN, but before it does, it provisions
		a PASSporT on the CPS associated with the target telephone number.
		</t><t>
		After normal PSTN routing, the call lands on a smart mobile handset that supports the STIR out-of-band mechanism. It queries the appropriate CPS over the Internet to determine if a call has been placed to it
		by a STIR-aware device. It finds the PASSporT provisioned by the enterprise PBX and uses it to verify the calling party number.
		</t>
		</section>
		<section anchor="case-pstn-ip" title="Case 3: PSTN to VoIP Call">
		<t>
		A call originates with an enterprise PBX that has both Internet access and a built-in gateway to the PSTN. It will immediate drop the call to the PSTN, but before it does, it provisions
		a PASSporT with the CPS associated with the target telephone number. However, it turns out that the call will eventually route through the PSTN to an Internet gateway, which will translate this into a SIP
		call and deliver it to an administrative domain with a STIR verification service.
		</t><t>
		In this case, the Internet gateway that receives the call from the PSTN can query the appropriate CPS to determine if the original caller created and provisioned a PASSporT for this call. If so,
		it can retrieve the PASSporT and, when it creates a SIP INVITE for this call, add a corresponding Identity header per <xref target="I-D.ietf-stir-rfc4474bis"/>. When the SIP INVITE reaches
		the destination administrative domain, it will be able to verify the PASSporT normally. Note that to avoid discrepancies with the Date header field value, only full-form PASSporT should be used for this purpose.
		</t>
		</section>
		<section anchor="case-gateways" title="Case 4: Gateway Out-of-band">
		<t>
		A call originates in the SIP world in a STIR-aware administrative domain. The local authentication service for that administrative domain creates a PASSporT which is carried
		in band in the call per <xref target="I-D.ietf-stir-rfc4474bis"/>. The call is routed out of the originating administrative domain and eventually reaches a gateway to the PSTN.
		</t><t>
		In this case, the originating authentication service does not support the out-of-band mechanism, so instead the gateway to the PSTN extracts the PASSporT from the SIP request and provisions it to the CPS. (When the call reaches the gateway to the PSTN, the gateway might first check the CPS to see if a PASSporT object had already been provisioned for this call, and only provision a PASSporT if none is present).
		</t><t>
		Ultimately, the call may terminate on the PSTN, or be routed back to the IP world. In the former case, perhaps the destination endpoints queries the CPS to retrieve the PASSporT provisioned by the first gateway. Or if the call ultimately returns to the IP world, it might be the gateway from the PSTN back to the Internet that retrieves the PASSporT from the CPS and attaches it to the new SIP INVITE it creates, or it might be the terminating administrative domain's verification service that checks the CPS when an INVITE arrives with no Identity header field. Either way the PASSporT can survive the gap in SIP coverage caused by the PSTN leg of the call.
		</t>
		</section>

	</section>


	<section anchor="arch" title="Solution Architecture">
      <t>In this section, we discuss a strawman architecture along the lines
   described in the previous section.  This discussion is deliberately
   sketchy, focusing on broad concepts and skipping over details.  The
   intent here is merely to provide a rough concept, not a complete
   solution.
	  	 </t>
		<section anchor="phone" title="Credentials and Phone Numbers">
		<t>
		   We start from the premise of the <xref target="RFC7340">STIR problem statement</xref> that phone numbers can be
   associated with credentials which can be used to attest
   ownership of numbers.  For purposes of exposition, we will assume
   that ownership is associated with the endpoint (e.g., a smartphone)
   but it might well be associated with a provider or gateway acting for the
   endpoint instead.  It might be the case that multiple entities are
   able to act for a given number, provided that they have the
   appropriate authority. <xref target="I-D.ietf-stir-certificates"/> describes
   a credentials system suitable for this purpose;
   the question of how an entity is determined
   to have control of a given number is out of scope for the current document.
		</t>
		</section>
		<section anchor="solve" title="Solution Architecture">
		<t>
		An overview of the basic calling and verification process is shown
   below.  In this diagram, we assume that Alice has the number
   +1.111.111.1111 and Bob has the number +2.222.222.2222.
		</t>
			 	<figure>
     <artwork><![CDATA[
Alice                       Call Placement Service                  Bob
-----------------------------------------------------------------------
<-  Authenticate as 1.111.111.1111  ---->

Store PASSporT ->

Call from 1.111.111.1111 ---------------------------------------------->


                               <-  Authenticate as 1.222.222.2222  ---->

                                    <-------------- Retrieve call record
                                                    from 1.111.111.1111?

                                     (1.222.222.2222,1.111.111.1111) -->

                                               [Ring phone with callerid
                                                       = 1.111.111.1111]
	]]></artwork>
     </figure>
	 		<t>
			   When Alice wishes to make a call to Bob, she contacts the CPS and
   authenticates to prove her ownership of her E.164 number.  Once she
   has authenticated, she then stores a PASSporT on
   the CPS.  The PASSpoRT is stored under Bob's number.
		</t>
				<t>
				   Once Alice has stored the PASSporT, she then places the call to Bob as
   usual.  At this point, Bob's phone would usually ring and display
   Alice's number (+1.111.111.1111), which is informed by the existing
   caller-id mechanisms (i.e., the CIN field of the IAM).  Instead,
   Bob's phone transparently contacts the CPS and requests any current
   PASSporTs for calls to Bob.  The CPS responds with any such PASSporTs (assuming they
   exists).  If such a PASSpoRT exists, Bob's phone can then present the callerid
   information as valid.  Otherwise, the call is unverifiable.  Note
   that this does not necessarily mean that the call is bogus; because
   we expect incremental deployment many legitimate calls will be
   unverifiable.
		</t>
		</section>
		<section anchor="sec" title="Security Analysis">
		<t>
   The primary attack we seek to prevent is an attacker convincing the
   callee that a given call is from some other caller C. There are two
   scenarios to be concerned with:
	</t><t><list><t>
	 The attacker wishes to simulate a call when none exists.
	  	 </t><t>
	  The attacker wishes to substitute himself for an existing call as
      described in <xref target="sub"/>.
	</t></list></t><t>
		If an attacker can inject fake PASSporT into the CPS or in the
		 communication from the CPS to the callee, he can mount either attack.
   As PASSporTs should be
   digitally signed by an appropriate authority for the number and verified by the callee
   (see <xref target="phone"/>), this should not arise in ordinary operations.  For privacy and robustness reasons,
   using TLS on the originating side when storing the PASSporT at the CPS is recommended.
   	  	 </t><t>
		 The entire system depends on the security of the credential
   infrastructure.  If the authentication credentials for a given number
   are compromised, then an attacker can impersonate calls from that
   number.
		</t>
		</section>
	<section anchor="sub" title="Substitution Attacks">
		<t>
   All that receipt of the PASSporT from the CPS proves to the called party is that Alice is trying to call
   Bob (or at least was as of very recently). It does not prove that
   any particular incoming call is from Alice.  Consider the scenario
   in which we have a service which provides an automatic callback to a
   user-provided number.  In that case, the attacker try to arrange for a
   false caller-id value, as shown below:</t>
			 	<figure>
     <artwork><![CDATA[
 Attacker            Callback Service              CPS               Bob
 -----------------------------------------------------------------------
 Place call to Bob ---------->

                             Store PASSporT for
                             CS:Bob -------------->

 Call from CS (forged caller-id info)  -------------------------------->

                             Call from CS ---------------------------> X


                                                <----- Retrieve PASSporT
                                                              for CS:Bob

                        PASSporT for CS:Bob --------------------------->

                                         [Ring phone with callerid = CS]
	]]></artwork>
     </figure><t>
		 In order to mount this attack, the attacker contacts the Callback
   Service (CS) and provides it with Bob's number.  This causes the CS
   to initiate a call to Bob. As before, the CS contacts the CPS to
   insert an appropriate PASSporT and then initiates a call to Bob. Because
   it is a valid CS injecting the PASSporT, none of the security checks
   mentioned above help.  However, the attacker simultaneously initiates
   a call to Bob using forged caller-id information corresponding to the
      CS.  If he wins the race with the CS, then Bob's phone will attempt
   to verify the attacker's call (and succeed since they are
   indistinguishable) and the CS's call will go to busy/voice mail/call
   waiting.  Note:  in a SIP environment, the callee might notice that
   there were multiple INVITEs and thus detect this attack.
		</t>
		</section>
    </section>

	<section anchor="cps" title="Call Placement Service Discovery and Interface">
	<t>
	In order for the two ends of the out-of-band dataflow to coordinate, they must agree on a way to discover a CPS and retrieve PASSporT objects from it
	based solely on the rendezvous information available: the calling party number and the called number.
	There are a number of potential service discovery mechanisms that could be used for
	this purpose. The means of service discovery may vary by use case.
	</t><t>
	There exist a number of common directory systems that might be used to translate telephone numbers into the URIs of a CPS. <xref target="RFC6116">ENUM</xref> is commonly implemented,
	though no "golden root" central ENUM administration exists that could be easily reused today to help the endpoints discover a common CPS. Other protocols associated with queries for
	telephone numbers, such as the <xref target="I-D.peterson-modern-teri">TeRI</xref> protocol, could also serve for this application.
	</t><t>
	Another possibility is to use a single distributed service for this function. <xref target="I-D.rosenberg-dispatch-vipr-overview">VIPR</xref> proposed a
	<xref target="RFC6940">RELOAD</xref> usage for telephone numbers to help direct calls to enterprises on the Internet. It would be possible to describe a similar RELOAD usage
	to identify the CPS where calls for a particular telephone number should be stored. One advantage that the STIR architecture has over VIPR is that it assumes a credential system
	that proves authority over telephone numbers; those credentials could be used to determine whether or not a CPS could legitimately claim to be the proper store for a given telephone
	number.
	</t><t>
	Future versions of this specification will identify suitable service discovery mechanisms for out-of-band STIR.
	</t>
	</section>

	    <section anchor="enhance" title="Some Potential Enhancements">
      <t>   Section 4 provides a broad sketch of an approach.  In this section,
   we consider some potential enhancements.  Readers can feel free to
   skip this section, as it is not necessary to get the flavor of the
   document.</t>
      <section anchor="encr" title="Encrypted PASSporTs">
      <t>
	     In the system described in Section 4, the CPS learns the PASSporT for
   every call, which is undesirable from a privacy perspective.  The
   situation can be improved by having the caller store encrypted PASSporTs.
   A number of schemes are possible, but for concreteness we sketch one
   possibility.
	     	  	 </t><t>
		The general idea is that each user's credentials are not just
   suitable for authentication to the CPS but also are an asymmetric key
   pair suitable for use in an encryption mode.  When Alice wants to
   store a PASSporT for Bob she retrieves Bob's credentials (see <xref target="lookup"/>)
   and then encrypts the PASSporT under Bob's public key.  [The encryption
   needs to be done in such a way that if you don't have Bob's key, the
   message is indistinguishable from random.  This is straightforward,
   but not compatible with typical secure message formats, which tend to
   indicate the recipient's identity.]  The PASSporT is then stored with the
   CPS under Alice's identity.  When Bob receives a call, he just asks
   the CPS (anonymously) for any calls from Alice to anyone.  He then
   trial-decrypts each and if any of them is for him, he proceeds as
   before.  In this way, the CPS learns Alice's call velocity but not
   who she is calling. This mechanism is suitable for cases where credentials
   are issued to end-user devices, rather than large operators.
	  </t>


	      <section anchor="lookup" title="Credential Lookup">
      <t>
	In order to encrypt a PASSporT, the caller needs access to the callee's
   credentials (specifically their public key).  This requires some sort
   of directory/lookup system.  This document does not specify any
   particular scheme, but a list of requirements would be something
   like:
	     	  	 </t><t>
   Obviously, if there is a single central database and the caller and
   callee each contact it in real time to determine the other's
   credentials, then this represents a real privacy risk, as the central
   database learns about each call.  A number of mechanisms are
   potentially available to mitigate this:
   	</t><t><list><t>
	 Have endpoints pre-fetch credentials for potential counterparties
      (e.g., their address book or the entire database).
	  	 </t><t>
	  Have caching servers in the user's network that proxy their
      fetches and thus conceal the relationship between the user and the
      credentials they are fetching.
	</t></list></t><t>
	   Clearly, there is a privacy/timeliness tradeoff in that getting
   really up-to-date knowledge about credential validity requires
   contacting the credential directory in real-time (e.g., via OCSP).
   This is somewhat mitigated for the caller's credentials in that he
   can get short-term credentials right before placing a call which only
   reveals his calling rate, but not who he is calling.  Alternately,
   the CPS can verify the caller's credentials via OCSP, though of
   course this requires the callee to trust the CPS's verification.
   This approach does not work as well for the callee's credentials, but
   the risk there is more modest since an attacker would need to both
   have the callee's credentials and regularly poll the database for
   every potential caller.
   	     	  	 </t><t>
  We consider the exact best point in the tradeoff space to be an open
   issue.
	  </t>
	      </section>
    </section>
	    <section anchor="fed" title="Federated Call Placement Services">
      <t>   The discussion above is written in terms of a single CPS, but this
   potentially has scaling problems, as well as allowing the CPS to
   learn about every call.  These issues can be alleviated by having a
   federated CPS.  If a credential lookup service is already available,
   the CPS location can also be stored in the callee's credentials.</t><t>
   A service discovery mechanism for out-of-band STIR should ideally enable federation of the CPS function.
   </t>
    </section>
	    <section anchor="escalate" title="Escalation to VoIP">
      <t>
	  If the call is to be carried over the PSTN, then the security
   properties described above are about the best we can do.  However, if
	  Alice and Bob are both VoIP capable, then there is an opportunity to
   provide a higher quality of service and security.  The basic idea is
   that the PASSporT contains an addition claim containing rendezvous information for Alice (e.g., Alice's
   SIP URI).  Once Bob has verified Alice's PASSporT, he can initiate a VoIP
   connection directly to Alice, thus bypassing the PSTN.  Mechanisms of
   this type are out of scope of this document.
	  </t>
    </section>
    </section>

    <section anchor="Acknowledgments" title="Acknowledgments">
      <t>The ideas
   in this document come out of discussions with Richard Barnes and Cullen
   Jennings.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>This entire document is about security, but the detailed security
   properties depend on having a single concrete scheme to analyze.</t>
    </section>
  </middle>




  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Informative References">
&RFC2119;
&RFC7340;
&RFC3261;
&RFC6116;
&RFC6940;
&I-D.ietf-stir-rfc4474bis;
&I-D.ietf-stir-certificates;
&I-D.ietf-stir-passport;
&I-D.peterson-modern-teri;
&I-D.rosenberg-dispatch-vipr-overview;

    </references>


  </back>
</rfc>
